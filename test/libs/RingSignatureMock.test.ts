import { expect } from "chai";
import { ethers } from "hardhat";
import { Contract } from "ethers";

import { Reverter } from "../helpers/reverter";

describe("RingSignatureMock", async () => {
  const reverter = new Reverter();

  let ringSignatureMock: Contract;

  let m: string;
  let i: BigInt;
  let c: BigInt[];
  let r: BigInt[];
  let pkX: BigInt[];
  let pkY: BigInt[];

  before(async () => {
    m = "QmcafQDfq4LGzQ6CimzLVBt7rqEAFSwE4ya8uZt9zUSZJr";

    i = BigInt("50471588177842483870949591504891431469788067843245220753429247714802432717931");
    c = [
      BigInt("70041801939983713545541323538650867611888908572372755867640542626006700327007"),
      BigInt("11383195236235059450968274357691085014684782031145982541396720988477490355059"),
      BigInt("51457338063847717974933298524926316666611040906549651277498439048797732727515"),
      BigInt("83520285365944823477249362188943334196252479687517416825605418842699868933856"),
      BigInt("4440865536153965334656762989295988603297907172732379424317783759012410342008"),
    ];

    r = [
      BigInt("34681769164153180207730108951907248945808824653538588288572152602466724238167"),
      BigInt("38421218312886342217363291339022477464498983787463718180231007937762144399467"),
      BigInt("55694777476098176687069655949015141665418945773107005677892088091197214072682"),
      BigInt("77005503372202429945955839956465406013552055414574695047693968274216394517182"),
      BigInt("2895594570500927798135432795361534101459713373207995170134619553792849695557"),
    ];
    pkX = [
      BigInt("21544180725283665080737435029403945626738292305451098752032497668875188941561"),
      BigInt("15264671438695105554814157736171101693808132776909943100114660041813940424917"),
      BigInt("63078138120762156328738222228180148525554661293694095968990272456102849232459"),
      BigInt("110876696510807313718716669564696607303253365879927370640173820875503868896830"),
      BigInt("75160285585510138550546692233670343500621109774094027756314740373042193659309"),
    ];

    pkY = [
      BigInt("29607869487799476451128679839843791240101423214162884824978515269761488121624"),
      BigInt("109760428980812280723640160076609939028183677671160852284735976210464342282729"),
      BigInt("96177297683348046674660984212655186653942447147719072583799479170909174380078"),
      BigInt("44503777459039890091037753626975999547975490216181475985249318303451719660782"),
      BigInt("78299027417075857530472507339741312673696906924523594633968044219747971426857"),
    ];

    const ringSignatureMockContract = await ethers.getContractFactory("RingSignatureMock");

    ringSignatureMock = await ringSignatureMockContract.deploy();

    await reverter.snapshot();
  });

  afterEach("revert", reverter.revert);

  describe("#verify", () => {
    it("should verify 5", async () => {
      let utf8Encode = new TextEncoder();

      expect(await ringSignatureMock.verifyRingSignature(utf8Encode.encode(m), i, c, r, pkX, pkY)).to.equal(true);
    });

    it("should verify 5", async () => {
      let utf8Encode = new TextEncoder();

      let C = [
        BigInt("100461471471512544497211957917221003689153100940756530367170159370863859007756"),
        BigInt("79368820139618030919575795751112725374303676686128446556498338979104344752865"),
        BigInt("57126813262815529166904955791568139417833933287637172610326769506888740080505"),
        BigInt("25149844065458570272451914526172889470485737836824351077878503086660653556851"),
        BigInt("17376944065732060858095810883146726585543533420396431485232445007446995552631"),
      ];
      let I = BigInt("50471588177842483870949591504891431469788067843245220753429247714802432717931");
      let R = [
        BigInt("76233534939808424846161488980995081465914568424389768313577512021139872086009"),
        BigInt("102157684690988693235767998083144813358146932586772473041254799896926231720425"),
        BigInt("2891146402159395176144300920894964684001647985764833589089788627056911751368"),
        BigInt("37624853023407604488749256732448509790953410836956323985631952938829113678596"),
        BigInt("73308061163997033054825843155030822366039145214998240845161711045829894656505"),
      ];

      expect(await ringSignatureMock.verifyRingSignature(utf8Encode.encode(m), I, C, R, pkX, pkY)).to.equal(true);
    });

    it("should verify 10", async () => {
      let utf8Encode = new TextEncoder();

      let C = [
        BigInt("2843191555210385612028746993914063209510857975195137686194578358158777801745"),
        BigInt("37933047426202821054429519994952821507716007205021510605298347179583402643788"),
        BigInt("99590900729301085584048051346275982308222755299367412893003282464352575585651"),
        BigInt("36389836741460782165762731428469658967365221634160004026524613473838481315349"),
        BigInt("27403211888521045220659852074823525707891968631586458568942681349408832543691"),
        BigInt("48475240227228181727149443944446082107553005657313506933468888313635336601145"),
        BigInt("59841880116913913869306084228033433202082729794323593000562040593030908597353"),
        BigInt("15735302261040352690321080671201019133235157558668309796413866175890963201594"),
        BigInt("10363381634000547074827247603403257283400329172851645526107534578816896767255"),
        BigInt("49636192352122884895350582429158695979580788650907054388111877830977444230661"),
      ];
      let I = BigInt("50471588177842483870949591504891431469788067843245220753429247714802432717931");
      let R = [
        BigInt("12955960036188426027714436872021495964942350247452394090895805665793684941693"),
        BigInt("47280926315010009207933517435679644242393443951271098756594356156987793187391"),
        BigInt("88347737553678393507256290718155783807809461210033873071216212862111047612817"),
        BigInt("69538506542985317505139505430887167533911539540085426040225967346839459187897"),
        BigInt("65838773603543719466633485368872299420341758527239837288566378629609842687263"),
        BigInt("72189275131653567499747588540991749232660309276564466208381579460480200984627"),
        BigInt("111910131791525386826648874539032806591919295429358647822485784980892626833703"),
        BigInt("101427739273595698265731976658078421361349363862622555673798770002309235047142"),
        BigInt("26250471619999428687081685117738376898018010091594733372526766750051941834319"),
        BigInt("67593872818013560347809669140313281669169107054225722007806428163960753533245"),
      ];

      let PKX = [
        BigInt("21544180725283665080737435029403945626738292305451098752032497668875188941561"),
        BigInt("15264671438695105554814157736171101693808132776909943100114660041813940424917"),
        BigInt("63078138120762156328738222228180148525554661293694095968990272456102849232459"),
        BigInt("110876696510807313718716669564696607303253365879927370640173820875503868896830"),
        BigInt("75160285585510138550546692233670343500621109774094027756314740373042193659309"),
        BigInt("72469974129338718295726541460210417592630029977388061486987332673546575551898"),
        BigInt("38587015262943370760543430972804702563035423184893503960887097628139529411427"),
        BigInt("14796632589042987319418432370823996931510432128646146314395947542752338747463"),
        BigInt("53791160364327058329132986024465807879118390690863770124145484455314564949140"),
        BigInt("85917293659358917299126830399127255951070519236008341640845437107572859811601"),
      ];

      let PKY = [
        BigInt("29607869487799476451128679839843791240101423214162884824978515269761488121624"),
        BigInt("109760428980812280723640160076609939028183677671160852284735976210464342282729"),
        BigInt("96177297683348046674660984212655186653942447147719072583799479170909174380078"),
        BigInt("44503777459039890091037753626975999547975490216181475985249318303451719660782"),
        BigInt("78299027417075857530472507339741312673696906924523594633968044219747971426857"),
        BigInt("42488835079941075190977335006398742838607660834353365021474547410040012392613"),
        BigInt("105527639249691670579355255222302997435618296292362791071819143331105140166854"),
        BigInt("55480598424895332269592507197925092324692158764866613881154053985690170450706"),
        BigInt("57400598442879272857686121342498962265103592515329069039611643790633478051513"),
        BigInt("17194055298231706139472944345443162840242831502567540217364888763342877132971"),
      ];

      expect(await ringSignatureMock.verifyRingSignature(utf8Encode.encode(m), I, C, R, PKX, PKY)).to.equal(true);
    });

    it("should verify 15", async () => {
      let utf8Encode = new TextEncoder();

      let C = [
        BigInt("100361431403064885189316024095784001756463886244895477344435798972625846921839"),
        BigInt("99798198270858152920737120173830663901737890344791718482507648402227023938203"),
        BigInt("11006492733562494648939658985484961882381152104091461382236694783588155511261"),
        BigInt("103337391277624002491340042677874246467131109746768547259240657802311918439205"),
        BigInt("15430895838623997992922428930574504439047881407157735235800863557683460872274"),
        BigInt("94089328900098060887396232768192009139657483866239837300330356058329111473255"),
        BigInt("50534066569890855543823343389158155112509042673755692118892978033912809264862"),
        BigInt("89081086376626741998224688796855607880194685702578603557032663825719788306346"),
        BigInt("8648352106880150765616396334906621416240137406224646532812708149135326225501"),
        BigInt("45092436634775382619919936453697839775701484622624128408437544794275344562715"),
        BigInt("19332974420517710226870141416513179133022372467126864799319306880267914812496"),
        BigInt("46168891138703993576592569322093342635593877759486232649798859530292204255256"),
        BigInt("18242063322146018684219292754178638834436329870535885732995580602714846874680"),
        BigInt("63375507640570162187285183874056292378550316948315410085061832911446163056125"),
        BigInt("19080494937563467083472967624619971345166549752248798300324963666127996090292"),
      ];

      let I = BigInt("50471588177842483870949591504891431469788067843245220753429247714802432717931");
      let R = [
        BigInt("38905711481735187579096159692767386024433497666539509373627065765128276612641"),
        BigInt("102550723302071866059324826719238330190936345298010008459568521089618241804308"),
        BigInt("20876098482032095325998407101373658540354743976271539686183785696346136721042"),
        BigInt("84131233604188747496360695760014696758214148343358942279028863951394342966753"),
        BigInt("78293245171500321186549144431565165262461182545005272955935529461539494028423"),
        BigInt("88702345392047677087679835467998907235644006018890411189705081731904473757756"),
        BigInt("114835562364003683308378160928071784124392105049022919611649236115446677639738"),
        BigInt("100948594678184385012047610981640475709922045739541170668931450100455557314804"),
        BigInt("74326459130316920361287378493546657510823985146040320346219395404668786873739"),
        BigInt("42692904874267650644549016822265490494674829480271106816675818050770662732072"),
        BigInt("21915527119723136651146799529828340899084585077396283217243697020028677251526"),
        BigInt("1586771331793109721926280796000999943597687431673796428424237649085172069703"),
        BigInt("28439480498308146913466268396911685263653733649228846557242616300515801097437"),
        BigInt("41287098265643248032332373123212814898360846009166142989736589381610060493413"),
        BigInt("81466194431982122484292966925909003899213516227352601172187183534184724779309"),
      ];

      let PKX = [
        BigInt("21544180725283665080737435029403945626738292305451098752032497668875188941561"),
        BigInt("15264671438695105554814157736171101693808132776909943100114660041813940424917"),
        BigInt("63078138120762156328738222228180148525554661293694095968990272456102849232459"),
        BigInt("110876696510807313718716669564696607303253365879927370640173820875503868896830"),
        BigInt("75160285585510138550546692233670343500621109774094027756314740373042193659309"),
        BigInt("72469974129338718295726541460210417592630029977388061486987332673546575551898"),
        BigInt("38587015262943370760543430972804702563035423184893503960887097628139529411427"),
        BigInt("14796632589042987319418432370823996931510432128646146314395947542752338747463"),
        BigInt("53791160364327058329132986024465807879118390690863770124145484455314564949140"),
        BigInt("85917293659358917299126830399127255951070519236008341640845437107572859811601"),
        BigInt("87093435620549728006420345486204157799048550442067155392568259788162193613872"),
        BigInt("29659686753640239243508893999512244603766466269955474479718378864693723446110"),
        BigInt("15424849336009190511002874076749751465585072536425382726153496612809778988088"),
        BigInt("55531773512132037659509161392325667324016053084014026847057984734140913657199"),
        BigInt("79627301784277941767557887063421716898082984953027436188646862662633279441459"),
      ];

      let PKY = [
        BigInt("29607869487799476451128679839843791240101423214162884824978515269761488121624"),
        BigInt("109760428980812280723640160076609939028183677671160852284735976210464342282729"),
        BigInt("96177297683348046674660984212655186653942447147719072583799479170909174380078"),
        BigInt("44503777459039890091037753626975999547975490216181475985249318303451719660782"),
        BigInt("78299027417075857530472507339741312673696906924523594633968044219747971426857"),
        BigInt("42488835079941075190977335006398742838607660834353365021474547410040012392613"),
        BigInt("105527639249691670579355255222302997435618296292362791071819143331105140166854"),
        BigInt("55480598424895332269592507197925092324692158764866613881154053985690170450706"),
        BigInt("57400598442879272857686121342498962265103592515329069039611643790633478051513"),
        BigInt("17194055298231706139472944345443162840242831502567540217364888763342877132971"),
        BigInt("101527686740005517948428517448061798673498290388137164773344815563607812845593"),
        BigInt("86386057097298143709421459806218024333179405550618274964267477661785555377851"),
        BigInt("35624613082718936694398902544981504857892875817454548200639634537506500610884"),
        BigInt("23702501323517684521754829939244823237209961700636989775413291619245616905649"),
        BigInt("17671156868263175880647882568555946264786782957744723477292775432438180934534"),
      ];

      expect(await ringSignatureMock.verifyRingSignature(utf8Encode.encode(m), I, C, R, PKX, PKY)).to.equal(true);
    });

    it("should not verify", async () => {
      let utf8Encode = new TextEncoder();

      let C = [
        BigInt("100461471471512544497211957917221003689153100940756530367170159370863859007752"),
        BigInt("79368820139618030919575795751112725374303676686128446556498338979104344752863"),
        BigInt("57126813262815529166904955791568139417833933287637172610326769506888730080505"),
        BigInt("25149844065458570272451914526172889470485737836824351077878503086660653556851"),
        BigInt("17376944065732060858095810883146726585543533420396431485232445007446995552631"),
      ];

      expect(await ringSignatureMock.verifyRingSignature(utf8Encode.encode(m), i, C, r, pkX, pkY)).to.equal(false);
    });
  });
});
